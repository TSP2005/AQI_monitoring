"""initial

Revision ID: 3dff84699e21
Revises: 
Create Date: 2025-03-17 23:21:18.297131

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3dff84699e21'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stations',
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('station_name', sa.String(length=100), nullable=False),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=7), nullable=False),
    sa.Column('longitude', sa.DECIMAL(precision=10, scale=7), nullable=False),
    sa.Column('epa_name', sa.String(length=100), nullable=True),
    sa.Column('epa_link', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('station_id')
    )
    op.create_index(op.f('ix_stations_station_id'), 'stations', ['station_id'], unique=False)
    op.create_table('system_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('log_level', sa.String(length=20), nullable=False),
    sa.Column('component', sa.String(length=50), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('log_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_system_logs_log_id'), 'system_logs', ['log_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('admin', 'user', 'data_contributor', name='user_role'), server_default='user', nullable=False),
    sa.Column('preferences', sa.JSON(), server_default=sa.text("'{}'::jsonb"), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('aqi_aggregations',
    sa.Column('aggregation_id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('avg_value', sa.DECIMAL(precision=10, scale=4), nullable=False),
    sa.Column('min_value', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('max_value', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('aqi_category', sa.Enum('good', 'moderate', 'unhealthy_sensitive', 'unhealthy', 'very_unhealthy', 'hazardous', name='aqi_category'), nullable=True),
    sa.Column('aggregation_type', sa.String(length=20), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stations.station_id'], ),
    sa.PrimaryKeyConstraint('aggregation_id')
    )
    op.create_index(op.f('ix_aqi_aggregations_aggregation_id'), 'aqi_aggregations', ['aggregation_id'], unique=False)
    op.create_table('measurements',
    sa.Column('measurement_id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('pm25', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('pm10', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('no2', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('co', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('so2', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('ozone', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('aqi', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stations.station_id'], ),
    sa.PrimaryKeyConstraint('measurement_id')
    )
    op.create_index(op.f('ix_measurements_measurement_id'), 'measurements', ['measurement_id'], unique=False)
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notification_type', sa.Enum('threshold_alert', 'forecast_alert', 'system_update', name='notification_type'), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=True),
    sa.Column('aqi_value', sa.Integer(), nullable=True),
    sa.Column('aqi_category', sa.Enum('good', 'moderate', 'unhealthy_sensitive', 'unhealthy', 'very_unhealthy', 'hazardous', name='aqi_category'), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stations.station_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_index(op.f('ix_notifications_notification_id'), 'notifications', ['notification_id'], unique=False)
    op.create_table('predictions',
    sa.Column('prediction_id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('predicted_value', sa.DECIMAL(precision=10, scale=4), nullable=False),
    sa.Column('predicted_aqi', sa.Integer(), nullable=True),
    sa.Column('confidence', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('prediction_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stations.station_id'], ),
    sa.PrimaryKeyConstraint('prediction_id')
    )
    op.create_index(op.f('ix_predictions_prediction_id'), 'predictions', ['prediction_id'], unique=False)
    op.create_table('public_contributions',
    sa.Column('contribution_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('station_id', sa.Integer(), nullable=True),
    sa.Column('pm25', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('pm10', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('no2', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('co', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('so2', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('ozone', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('overall_aqi', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='contribution_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stations.station_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('contribution_id')
    )
    op.create_index(op.f('ix_public_contributions_contribution_id'), 'public_contributions', ['contribution_id'], unique=False)
    op.create_table('weather_conditions',
    sa.Column('weather_id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('humidity', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('wind_speed', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('pressure', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('precipitation', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('weather_condition', sa.String(length=50), nullable=True),
    sa.Column('measurement_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stations.station_id'], ),
    sa.PrimaryKeyConstraint('weather_id')
    )
    op.create_index(op.f('ix_weather_conditions_weather_id'), 'weather_conditions', ['weather_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_weather_conditions_weather_id'), table_name='weather_conditions')
    op.drop_table('weather_conditions')
    op.drop_index(op.f('ix_public_contributions_contribution_id'), table_name='public_contributions')
    op.drop_table('public_contributions')
    op.drop_index(op.f('ix_predictions_prediction_id'), table_name='predictions')
    op.drop_table('predictions')
    op.drop_index(op.f('ix_notifications_notification_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_measurements_measurement_id'), table_name='measurements')
    op.drop_table('measurements')
    op.drop_index(op.f('ix_aqi_aggregations_aggregation_id'), table_name='aqi_aggregations')
    op.drop_table('aqi_aggregations')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_system_logs_log_id'), table_name='system_logs')
    op.drop_table('system_logs')
    op.drop_index(op.f('ix_stations_station_id'), table_name='stations')
    op.drop_table('stations')
    # ### end Alembic commands ###
